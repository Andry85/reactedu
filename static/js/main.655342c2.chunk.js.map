{"version":3,"sources":["components/Form/Form.js","components/Field/Field.js","components/Popup/Popup.js","components/UseWindowDimensions/UseWindowDimensions.js","components/Slider/Slider.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","submitEL","useRef","useEffect","statusBtn","current","click","classList","add","className","type","name","ref","onClick","e","Field","preventDefault","transporterEvent","target","Popup","getWindowDimensions","window","width","innerWidth","height","innerHeight","Slider","lastPos","useState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","error","setError","isLoaded","setIsLoaded","photos","setPhotos","index","setIndex","lastIndex","setLastIndex","fetch","then","res","json","result","message","slice","map","item","title","id","src","thumbnailUrl","length","browser","Bowser","getParser","navigator","userAgent","console","log","getBrowser","isValidBrowser","satisfies","windows","macos","safari","mobile","chrome","firefox","opera","App","isBtnPressed","setIsBtnPressed","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.655342c2.chunk.js","sourcesContent":["import './Form.css';\nimport { useRef } from 'react';\nimport React, { useState, useEffect } from 'react';\n\nfunction Form(props) {\n\n  const submitEL = useRef();\n\n  const onButtonClick = (e) => {\n    \n  };\n\n\n  useEffect(() => {\n\n    if (props.statusBtn) {\n      submitEL.current.click();\n      submitEL.current.classList.add('active');\n    }\n\n  });\n\n  return (\n    <div className=\"form\">\n      <form>\n        <label>\n          Name:\n          <input type=\"text\" name=\"name\" />\n        </label>\n        <button ref={submitEL} onClick={onButtonClick}>Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import './Field.css';\n\nfunction Field(props) {\n\n  const handlerClick = (e) => {\n    e.preventDefault();\n    props.transporterEvent(e.target);\n  };\n\n  return (\n    <div className=\"field\">\n      <form>\n        <button onClick={handlerClick}>SHow</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Field;\n","import './Popup.css';\nimport Field from '../Field/Field';\n\nfunction Popup(props) {\n\n\n  return (\n    <Field transporterEvent={props.transporterEvent} />\n  );\n}\n\nexport default Popup;\n","import React, { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import './Slider.css';\nimport React, { useState, useEffect } from 'react';\nimport useWindowDimensions from '../UseWindowDimensions/UseWindowDimensions';\n\n\nfunction Slider(props) {\n  const {width } = useWindowDimensions();\n\n  let initailPos = 0;\n  let lastPos;\n  \n\n  if (width > 1023) {\n    lastPos = 4;\n  } else if (width > 767) {\n    lastPos = 2;\n  } else {\n    lastPos = 1;\n  }\n\n  \n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [index, setIndex] = useState(initailPos);\n  const [lastIndex, setLastIndex] = useState(lastPos);\n  \n\n  const prevSLide  = () => {\n\n    if (index >= 1) {\n      setIndex(index - 1);\n      setLastIndex(lastIndex - 1);\n    } else {\n      setIndex(photos.length - lastPos);\n      setLastIndex(photos.length);\n    }\n\n  }\n\n  const nextSlide  = () => {\n    if (index >= photos.length - lastPos) {\n      setIndex(initailPos);\n      setLastIndex(lastPos);\n    } else {\n      setIndex(index + 1);\n      setLastIndex(lastIndex + 1);\n    }\n  }\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPhotos(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n\n      function handleResize() {\n        \n      }\n  \n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n\n\n  }, [])\n\n \n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <ul className=\"slider\">\n          {photos.slice(index, lastIndex).map(item => (\n            <li key={item.id}>\n              <h2>{item.title}</h2>\n              <p>id: {item.id}</p>\n              <img src={item.thumbnailUrl} />\n            </li>\n          ))}\n        </ul>\n        <button onClick={prevSLide}>\n          Prev\n        </button>\n        <button onClick={nextSlide}>\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Slider;\n","import './App.css';\nimport Form from './components/Form/Form';\nimport Popup from './components/Popup/Popup';\nimport React, { useState } from 'react';\nimport Bowser from \"bowser\";\nimport Slider from './components/Slider/Slider';\n\nconst browser = Bowser.getParser(window.navigator.userAgent);\n\nconsole.log(browser.getBrowser());\n\nconst isValidBrowser = browser.satisfies({\n  // declare browsers per OS\n  windows: {\n    \"microsoft edge\": \">=18\",\n  },\n  macos: {\n    safari: \">10.1\"\n  },\n\n  // per platform (mobile, desktop or tablet)\n  mobile: {\n    safari: '>=9',\n    'android browser': '>3.10'\n  },\n\n  // or in general\n  chrome: \">20\",\n  firefox: \">31\",\n  opera: \">=22\",\n});\n\n\nconsole.log(isValidBrowser, 'isValidBrowser');\n\n\nfunction App() {\n\n  const [isBtnPressed, setIsBtnPressed] = useState(false);\n\n\n\n  const transporterEvent = (data) => {\n    console.log(data);\n\n    if (data) {\n      setIsBtnPressed(!isBtnPressed)\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <Form statusBtn = {isBtnPressed} />\n      <Popup transporterEvent={transporterEvent} />\n      <Slider/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}