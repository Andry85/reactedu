{"ast":null,"code":"var _jsxFileName = \"/var/www/reactedu/my-app/src/components/Slider/Slider.js\",\n    _s = $RefreshSig$();\n\nimport './Slider.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Slider(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [photos, setPhotos] = useState([]);\n\n  const renderSlider = () => {}; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPhotos(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevSLide,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSlide,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Slider, \"BiuzEg6Tt7s4DwvcuT6mGh5TGFk=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/var/www/reactedu/my-app/src/components/Slider/Slider.js"],"names":["React","useState","useEffect","Slider","props","error","setError","isLoaded","setIsLoaded","photos","setPhotos","renderSlider","fetch","then","res","json","result","message","prevSLide","nextSlide"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMU,YAAY,GAAI,MAAM,CAE3B,CAFD,CARqB,CAYrB;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACM,MAAD,CAAT;AACD,KANL,EAOI;AACA;AACA;AACCX,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAoBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACY,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAEW,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAaD;AACF;;GApDQhB,M;;KAAAA,M;AAsDT,eAAeA,MAAf","sourcesContent":["import './Slider.css';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction Slider(props) {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const [photos, setPhotos] = useState([]);\n  \n\n  const renderSlider  = () => {\n    \n  }\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPhotos(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n \n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <ul>\n          \n        </ul>\n        <button onClick={prevSLide}>\n          Prev\n        </button>\n        <button onClick={nextSlide}>\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}