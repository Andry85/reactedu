{"ast":null,"code":"var _jsxFileName = \"/var/www/reactedu/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Form from './components/Form/Form';\nimport Popup from './components/Popup/Popup';\nimport React, { useState } from 'react'; // import Bowser from \"bowser\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isBtnPressed, setIsBtnPressed] = useState(false);\n  const browser = Bowser.getParser(window.navigator.userAgent);\n  const isValidBrowser = browser.satisfies({\n    // declare browsers per OS\n    windows: {\n      \"internet explorer\": \">10\"\n    },\n    macos: {\n      safari: \">10.1\"\n    },\n    // per platform (mobile, desktop or tablet)\n    mobile: {\n      safari: '>=9',\n      'android browser': '>3.10'\n    },\n    // or in general\n    chrome: \"~20.1.1432\",\n    firefox: \">31\",\n    opera: \">=22\",\n    // also supports equality operator\n    chrome: \"=20.1.1432\",\n    // will match particular build only\n    // and loose-equality operator\n    chrome: \"~20\",\n    // will match any 20.* sub-version\n    chrome: \"~20.1\" // will match any 20.1.* sub-version (20.1.19 as well as 20.1.12.42-alpha.1)\n\n  });\n  console.log(isValidBrowser, 'isValidBrowser');\n\n  const transporterEvent = data => {\n    console.log(data);\n\n    if (data) {\n      setIsBtnPressed(!isBtnPressed);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      statusBtn: isBtnPressed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      transporterEvent: transporterEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3KnHZ9AHB6mT6XCtD/SATHaU4AU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/reactedu/my-app/src/App.js"],"names":["Form","Popup","React","useState","App","isBtnPressed","setIsBtnPressed","browser","Bowser","getParser","window","navigator","userAgent","isValidBrowser","satisfies","windows","macos","safari","mobile","chrome","firefox","opera","console","log","transporterEvent","data"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMI,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBC,MAAM,CAACC,SAAP,CAAiBC,SAAlC,CAAhB;AACA,QAAMC,cAAc,GAAGN,OAAO,CAACO,SAAR,CAAkB;AACvC;AACAC,IAAAA,OAAO,EAAE;AACP,2BAAqB;AADd,KAF8B;AAKvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KALgC;AASvC;AACAC,IAAAA,MAAM,EAAE;AACND,MAAAA,MAAM,EAAE,KADF;AAEN,yBAAmB;AAFb,KAV+B;AAevC;AACAE,IAAAA,MAAM,EAAE,YAhB+B;AAiBvCC,IAAAA,OAAO,EAAE,KAjB8B;AAkBvCC,IAAAA,KAAK,EAAE,MAlBgC;AAoBvC;AACAF,IAAAA,MAAM,EAAE,YArB+B;AAqBjB;AAEtB;AACAA,IAAAA,MAAM,EAAE,KAxB+B;AAwBjB;AACtBA,IAAAA,MAAM,EAAE,OAzB+B,CAyBjB;;AAzBiB,GAAlB,CAAvB;AA6BAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ,EAA4B,gBAA5B;;AAKA,QAAMW,gBAAgB,GAAIC,IAAD,IAAU;AACjCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AAEA,QAAIA,IAAJ,EAAU;AACRnB,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;AAEF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAIA;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,gBAAgB,EAAEmB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAtDQpB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Form from './components/Form/Form';\nimport Popup from './components/Popup/Popup';\nimport React, { useState } from 'react';\n// import Bowser from \"bowser\";\n\nfunction App() {\n\n  const [isBtnPressed, setIsBtnPressed] = useState(false);\n\n  const browser = Bowser.getParser(window.navigator.userAgent);\n  const isValidBrowser = browser.satisfies({\n    // declare browsers per OS\n    windows: {\n      \"internet explorer\": \">10\",\n    },\n    macos: {\n      safari: \">10.1\"\n    },\n\n    // per platform (mobile, desktop or tablet)\n    mobile: {\n      safari: '>=9',\n      'android browser': '>3.10'\n    },\n\n    // or in general\n    chrome: \"~20.1.1432\",\n    firefox: \">31\",\n    opera: \">=22\",\n\n    // also supports equality operator\n    chrome: \"=20.1.1432\", // will match particular build only\n\n    // and loose-equality operator\n    chrome: \"~20\",        // will match any 20.* sub-version\n    chrome: \"~20.1\"       // will match any 20.1.* sub-version (20.1.19 as well as 20.1.12.42-alpha.1)\n  });\n\n  \n  console.log(isValidBrowser, 'isValidBrowser');\n\n    \n\n\n  const transporterEvent = (data) => {\n    console.log(data);\n\n    if (data) {\n      setIsBtnPressed(!isBtnPressed)\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <Form statusBtn = {isBtnPressed} />\n      <Popup transporterEvent={transporterEvent} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}