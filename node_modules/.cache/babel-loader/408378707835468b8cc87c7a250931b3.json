{"ast":null,"code":"var _jsxFileName = \"/var/www/reactedu/my-app/src/components/Slider/Slider.js\",\n    _s = $RefreshSig$();\n\nimport './Slider.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Slider(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [lastIndex, setLastIndex] = useState(3);\n\n  const prevSLide = () => {\n    console.log(index, 'index');\n    console.log(lastIndex, 'lastIndex');\n\n    if (index >= 1) {\n      setIndex(index - 1);\n      setLastIndex(lastIndex - 1);\n    } else {\n      setIndex(photos.length - 3);\n      setLastIndex(photos.length);\n    }\n  };\n\n  const nextSlide = () => {\n    console.log(index, 'index');\n    console.log(lastIndex, 'lastIndex');\n    console.log(photos.length, 'photos.length');\n\n    if (index > photos.length) {\n      setIndex(0);\n      setLastIndex(3);\n    } else {\n      setIndex(index + 1);\n      setLastIndex(lastIndex + 1);\n    }\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setPhotos(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"slider\",\n        children: photos.slice(index, lastIndex).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"id: \", item.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.thumbnailUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevSLide,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSlide,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Slider, \"Uy+Zakyaxq6LFijSRsbRcpwj+YU=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/var/www/reactedu/my-app/src/components/Slider/Slider.js"],"names":["React","useState","useEffect","Slider","props","error","setError","isLoaded","setIsLoaded","photos","setPhotos","index","setIndex","lastIndex","setLastIndex","prevSLide","console","log","length","nextSlide","fetch","then","res","json","result","message","slice","map","item","title","id","thumbnailUrl"],"mappings":"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","sourcesContent":["import './Slider.css';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction Slider(props) {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [lastIndex, setLastIndex] = useState(3);\n  \n  \n\n  const prevSLide  = () => {\n\n    console.log(index, 'index');\n    console.log(lastIndex, 'lastIndex');\n\n    if (index >= 1) {\n      setIndex(index - 1);\n      setLastIndex(lastIndex - 1);\n    } else {\n      setIndex(photos.length - 3);\n      setLastIndex(photos.length);\n    }\n\n  }\n\n  const nextSlide  = () => {\n\n    console.log(index, 'index');\n    console.log(lastIndex, 'lastIndex');\n    console.log(photos.length, 'photos.length');\n\n    if (index > photos.length) {\n      setIndex(0);\n      setLastIndex(3);\n    } else {\n      setIndex(index + 1);\n      setLastIndex(lastIndex + 1);\n    }\n  }\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPhotos(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n \n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <>\n        <ul className=\"slider\">\n          {photos.slice(index, lastIndex).map(item => (\n            <li key={item.id}>\n              <h2>{item.title}</h2>\n              <p>id: {item.id}</p>\n              <img src={item.thumbnailUrl} />\n            </li>\n          ))}\n        </ul>\n        <button onClick={prevSLide}>\n          Prev\n        </button>\n        <button onClick={nextSlide}>\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}